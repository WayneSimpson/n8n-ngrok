volumes:
  n8n_storage:
  postgres_storage:
  qdrant_storage:

networks:
  n8n-local:

services:
  postgres:
    image: postgres:latest
    networks: ['n8n-local']
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: n8nio/n8n:latest
    networks: ['n8n-local']
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_DIAGNOSTICS_ENABLED=true
      - N8N_PERSONALIZATION_ENABLED=true
      - N8N_ENCRYPTION_KEY
      - N8N_USER_MANAGEMENT_JWT_SECRET
      - N8N_REINSTALL_MISSING_PACKAGES=true
      - N8N_AI_ENABLED=true
      - N8N_AI_OPENAI_API_KEY=${N8N_AI_OPENAI_API_KEY}
      - N8N_AI_OPENAI_MODEL=gpt-4o-2024-08-06
      - N8N_AI_PROVIDER=openai
      - NODE_FUNCTION_ALLOW_BUILTIN=*
      - NODE_FUNCTION_ALLOW_EXTERNAL=*
      - WEBHOOK_URL=${WEBHOOK_URL}
      - N8N_HOST=${N8N_HOST}
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['n8n-local']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    networks: ['n8n-local']
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: http n8n:5678 --domain=${N8N_HOST}
    depends_on:
      - n8n
    restart: unless-stopped
